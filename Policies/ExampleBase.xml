<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" TenantId="harshaltest.onmicrosoft.com" PolicyId="B2C_1A_ExampleBase" PublicPolicyUri="http://harshaltest.onmicrosoft.com/B2C_1A_ExampleBase">

    <BuildingBlocks>
        <ClaimsSchema>
            <ClaimType Id="objectId">
                <DisplayName>User's Object ID</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OAuth2" PartnerClaimType="oid" />
                    <Protocol Name="OpenIdConnect" PartnerClaimType="oid" />
                    <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/objectidentifier" />
                </DefaultPartnerClaimTypes>
                <UserHelpText>Object identifier (ID) of the user object in Azure AD.</UserHelpText>
            </ClaimType>

            <ClaimType Id="userPrincipalName">
                <DisplayName>UserPrincipalName</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OAuth2" PartnerClaimType="upn" />
                    <Protocol Name="OpenIdConnect" PartnerClaimType="upn" />
                    <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/userprincipalname" />
                </DefaultPartnerClaimTypes>
                <UserHelpText>Your user name as stored in the Azure Active Directory.</UserHelpText>
            </ClaimType>

            <ClaimType Id="passwordPolicies">
                <DisplayName>Password Policies</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Password policies used by Azure AD to determine password strength, expiry etc.</UserHelpText>
            </ClaimType>

            <ClaimType Id="givenName">
                <DisplayName>First Name</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OAuth2" PartnerClaimType="given_name" />
                    <Protocol Name="OpenIdConnect" PartnerClaimType="given_name" />
                    <Protocol Name="SAML2" PartnerClaimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname" />
                </DefaultPartnerClaimTypes>
                <UserHelpText>Your given name (also known as first name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="surname">
                <DisplayName>Last Name</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OAuth2" PartnerClaimType="family_name" />
                    <Protocol Name="OpenIdConnect" PartnerClaimType="family_name" />
                    <Protocol Name="SAML2" PartnerClaimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname" />
                </DefaultPartnerClaimTypes>
                <UserHelpText>Your surname (also known as family name or last name).</UserHelpText>
                <UserInputType>TextBox</UserInputType>
            </ClaimType>

            <ClaimType Id="displayName">
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OAuth2" PartnerClaimType="unique_name" />
                    <Protocol Name="OpenIdConnect" PartnerClaimType="name" />
                    <Protocol Name="SAML2" PartnerClaimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name" />
                </DefaultPartnerClaimTypes>
            </ClaimType>

            <ClaimType Id="email">
                <DisplayName>Email Address</DisplayName>
                <DataType>string</DataType>
                <DefaultPartnerClaimTypes>
                    <Protocol Name="OpenIdConnect" PartnerClaimType="email" />
                </DefaultPartnerClaimTypes>
                <UserHelpText>Email address that can be used to contact you.</UserHelpText>
                <UserInputType>TextBox</UserInputType>
                <Restriction>
                    <Pattern RegularExpression="^[a-zA-Z0-9.!#$%&amp;'^_`{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" HelpText="Please enter a valid email address." />
                </Restriction>
            </ClaimType>

            <ClaimType Id="password">
                <DisplayName>Password</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Enter password</AdminHelpText>
                <UserHelpText>Enter password</UserHelpText>
                <UserInputType>Password</UserInputType>
                <PredicateValidationReference Id="StrongPassword" />
            </ClaimType>

            <ClaimType Id="grant_type">
                <DisplayName>grant_type</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Special parameter passed for local account authentication to login.microsoftonline.com.</UserHelpText>
            </ClaimType>

            <ClaimType Id="scope">
                <DisplayName>scope</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Special parameter passed for local account authentication to login.microsoftonline.com.</UserHelpText>
            </ClaimType>

            <ClaimType Id="nca">
                <DisplayName>nca</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>Special parameter passed for local account authentication to login.microsoftonline.com.</UserHelpText>
            </ClaimType>

            <ClaimType Id="client_id">
                <DisplayName>client_id</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
                <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
            </ClaimType>

            <ClaimType Id="resource_id">
                <DisplayName>resource_id</DisplayName>
                <DataType>string</DataType>
                <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
                <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
            </ClaimType>
        </ClaimsSchema>


        <Predicates>
            <Predicate Id="DisallowedWhitespace" Method="MatchesRegex">
                <UserHelpText>The password must not begin or end with a whitespace character.</UserHelpText>
                <Parameters>
                    <Parameter Id="RegularExpression">(^\S.*\S$)|(^\S+$)|(^$)</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="AllowedAADCharacters" Method="MatchesRegex">
                <UserHelpText>An invalid character was provided.</UserHelpText>
                <Parameters>
                    <Parameter Id="RegularExpression">(^([0-9A-Za-z\d@#$%^&amp;*\-_+=[\]{}|\\:',?/`~"();! ]|(\.(?!@)))+$)|(^$)</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="IsLengthBetween8And64" Method="IsLengthRange">
                <UserHelpText>The password must be between 8 and 64 characters.</UserHelpText>
                <Parameters>
                    <Parameter Id="Minimum">8</Parameter>
                    <Parameter Id="Maximum">64</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Lowercase" Method="IncludesCharacters">
                <UserHelpText>a lowercase letter</UserHelpText>
                <Parameters>
                    <Parameter Id="CharacterSet">a-z</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Uppercase" Method="IncludesCharacters">
                <UserHelpText>an uppercase letter</UserHelpText>
                <Parameters>
                    <Parameter Id="CharacterSet">A-Z</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Number" Method="IncludesCharacters">
                <UserHelpText>a digit</UserHelpText>
                <Parameters>
                    <Parameter Id="CharacterSet">0-9</Parameter>
                </Parameters>
            </Predicate>

            <Predicate Id="Symbol" Method="IncludesCharacters">
                <UserHelpText>a symbol</UserHelpText>
                <Parameters>
                    <Parameter Id="CharacterSet">@#$%^&amp;*\-_+=[]{}|\\:',.?/`~"();!</Parameter>
                </Parameters>
            </Predicate>
        </Predicates>


        <PredicateValidations>
            <PredicateValidation Id="StrongPassword">
                <PredicateGroups>
                    <PredicateGroup Id="DisallowedWhitespaceGroup">
                        <PredicateReferences>
                            <PredicateReference Id="DisallowedWhitespace" />
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="AllowedAADCharactersGroup">
                        <PredicateReferences>
                            <PredicateReference Id="AllowedAADCharacters" />
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="LengthGroup">
                        <PredicateReferences>
                            <PredicateReference Id="IsLengthBetween8And64" />
                        </PredicateReferences>
                    </PredicateGroup>
                    <PredicateGroup Id="CharacterClasses">
                        <UserHelpText>The password must have at least 3 of the following:</UserHelpText>
                        <PredicateReferences MatchAtLeast="3">
                            <PredicateReference Id="Lowercase" />
                            <PredicateReference Id="Uppercase" />
                            <PredicateReference Id="Number" />
                            <PredicateReference Id="Symbol" />
                        </PredicateReferences>
                    </PredicateGroup>
                </PredicateGroups>
            </PredicateValidation>
        </PredicateValidations>
    </BuildingBlocks>

    <ClaimsProviders>
        <ClaimsProvider>
            <!-- The technical profile(s) defined in this section is required by the framework to be included in all policies. -->
            <DisplayName>Trustframework Policy Engine TechnicalProfiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="TpEngine_c3bd4fe2-1775-4013-b91d-35f16d377d13">
                    <DisplayName>Trustframework Policy Engine Default Technical Profile</DisplayName>
                    <Protocol Name="None" />
                    <Metadata>
                        <Item Key="url">{service:te}</Item>
                    </Metadata>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <!-- 
  The technical profile(s) defined in this section specify Token Issuers that are used by the required SendClaims step of a User Journey 
  to return a token to the caller.
  -->
            <DisplayName>Token Issuer Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="JwtIssuer">
                    <DisplayName>JWT Issuer</DisplayName>
                    <Protocol Name="None" />
                    <OutputTokenFormat>JWT</OutputTokenFormat>
                    <Metadata>
                        <Item Key="client_id">{service:te}</Item>
                        <Item Key="issuer_refresh_token_user_identity_claim_type">objectId</Item>
                        <Item Key="SendTokenResponseBodyWithJsonNumbers">true</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
                        <Key Id="issuer_refresh_token_key" StorageReferenceId="B2C_1A_TokenEncryptionKeyContainer" />
                    </CryptographicKeys>
                    <InputClaims />
                    <OutputClaims />
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <!--
  The technical profiles defined in this section wok with Azure Active Directory.
  -->
            <DisplayName>Azure Active Directory Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="AADUserWriter">
                    <DisplayName>Write user information to AAD</DisplayName>
                    <Metadata>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
                        <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">The account already exists.</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true" />
                    </InputClaims>
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" />
                        <PersistedClaim ClaimTypeReferenceId="displayName"/>
                        <PersistedClaim ClaimTypeReferenceId="givenName"/>
                        <PersistedClaim ClaimTypeReferenceId="surname"/>
                        <PersistedClaim ClaimTypeReferenceId="passwordPolicies" DefaultValue="DisablePasswordExpiration,DisableStrongPassword" />
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress"/>
                    </OutputClaims>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common"/>
                </TechnicalProfile>

                <TechnicalProfile Id="AADUserReader">
                    <DisplayName>Update user information to AAD</DisplayName>
                    <Metadata>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="signInNames.emailAddress" Required="true" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                        <OutputClaim ClaimTypeReferenceId="displayName"/>                        
                    </OutputClaims>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common"/>
                </TechnicalProfile>

                <TechnicalProfile Id="AADUserUpdater">
                    <DisplayName>Update user information to AAD</DisplayName>
                    <Metadata>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
                        <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">The account does not exist.</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
                    </InputClaims>
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="objectId"/>
                        <PersistedClaim ClaimTypeReferenceId="displayName"/>
                        <PersistedClaim ClaimTypeReferenceId="givenName"/>
                        <PersistedClaim ClaimTypeReferenceId="surname"/>
                        <PersistedClaim ClaimTypeReferenceId="passwordPolicies" DefaultValue="DisablePasswordExpiration,DisableStrongPassword" />
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="displayName"/>
                    </OutputClaims>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common"/>
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-Common">
                    <DisplayName>Base Common AAD Content</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AzureActiveDirectoryProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>                    
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <!--
  The technical profile defined in this section allows a user to enter their first and last name, then composes the message text based on those entries.
  -->
            <DisplayName>Sample User Input Collection Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="UserInformationCollector">
                    <DisplayName>Collect Sample User Input Technical Profile</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
                        <Item Key="LookupNotFound">The provided email address was not from a valid company.</Item>
                        <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">The provided email address was not from a valid company.</Item>
                    </Metadata>
                    <DisplayClaims>
                        <DisplayClaim ClaimTypeReferenceId="givenName" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="surname" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="email" Required="true"/>
                        <DisplayClaim ClaimTypeReferenceId="password" Required="true"/>
                    </DisplayClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                        <OutputClaim ClaimTypeReferenceId="email"/>
                        <OutputClaim ClaimTypeReferenceId="password"/>
                    </OutputClaims>                    
                </TechnicalProfile>

                <TechnicalProfile Id="CheckCompanyDomain">
                    <DisplayName>Check Company Domain</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <InputClaimsTransformations>
                        <InputClaimsTransformation ReferenceId="GetDomainFromEmail"/>
                    </InputClaimsTransformations>                    
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="LookupDomain"/>
                    </OutputClaimsTransformations>
                </TechnicalProfile>

                <TechnicalProfile Id="AccessCodeInputCollector">
                    <DisplayName>Collect Access Code Input Technical Profile</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
                        <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Invalid access code.</Item>
                    </Metadata>                    
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="CheckAccessCodeViaHttp"/>
                        <!--<ValidationTechnicalProfile ReferenceId="CheckAccessCodeViaClaimsTransformationChecker"/>-->
                    </ValidationTechnicalProfiles>
                </TechnicalProfile>

                <TechnicalProfile Id="CheckAccessCodeViaClaimsTransformationChecker">
                    <DisplayName>Check that the user has entered a valid access code by using Claims Transformations</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="isValidAccessCode"/>
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CheckIfIsValidAccessCode"/>
                        <OutputClaimsTransformation ReferenceId="ThrowIfIsNotValidAccessCode"/>
                    </OutputClaimsTransformations>
                </TechnicalProfile>

                <TechnicalProfile Id="CheckAccessCodeViaHttp">
                    <DisplayName>Check that the user has entered a valid access code by using Claims Transformations</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ServiceUrl">https://policyfilesdeepdive20220103191028.azurewebsites.net/Api/VerifyAccessCode</Item>
                        <Item Key="SendClaimsIn">Body</Item>
                        <Item Key="AuthenticationType">None</Item>
                        <Item Key="AllowInsecureAuthInProduction">true</Item>
                        <Item Key="DebugMode">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="userEmail"/>
                        <InputClaim ClaimTypeReferenceId="accessCode" PartnerClaimType="accessCode"/>
                    </InputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <DisplayName>OpenID Connect Technical Profiles</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="LoginUser">
                    <DisplayName>Local Account SignIn</DisplayName>
                    <Protocol Name="OpenIdConnect" />
                    <Metadata>
                        <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">We can't seem to find your account</Item>
                        <Item Key="UserMessageIfInvalidPassword">Your password is incorrect</Item>
                        <Item Key="UserMessageIfOldPasswordUsed">Looks like you used an old password</Item>

                        <Item Key="ProviderName">https://sts.windows.net/</Item>
                        <Item Key="METADATA">https://login.microsoftonline.com/{tenant}/.well-known/openid-configuration</Item>
                        <Item Key="authorization_endpoint">https://login.microsoftonline.com/{tenant}/oauth2/token</Item>
                        <Item Key="response_types">id_token</Item>
                        <Item Key="response_mode">query</Item>
                        <Item Key="scope">email openid</Item>

                        <!-- Policy Engine Clients -->
                        <Item Key="UsePolicyInRedirectUri">false</Item>
                        <Item Key="HttpBinding">POST</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="username" Required="true" />
                        <InputClaim ClaimTypeReferenceId="password" PartnerClaimType="password" Required="true" />

                        <InputClaim ClaimTypeReferenceId="grant_type" DefaultValue="password" />
                        <InputClaim ClaimTypeReferenceId="scope" DefaultValue="openid" />
                        <InputClaim ClaimTypeReferenceId="nca" PartnerClaimType="nca" DefaultValue="1" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="oid" />
                    </OutputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
    </ClaimsProviders>

</TrustFrameworkPolicy>